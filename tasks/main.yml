---
- name: Install dependencies
  ansible.builtin.apt:
    name: "{{ logstash_dependencies }}"
    state: present
    update_cache: true

- name: Add Elastic key
  ansible.builtin.apt_key:
    state: present
    url: "{{ logstash_signing_key }}"

- name: Manage logstash APT repository
  ansible.builtin.apt_repository:
    repo: "{{ logstash_repository }}"
    state: "{{ 'absent' if logstash_use_oss else 'present' }}"

- name: Manage logstash OSS APT repository
  ansible.builtin.apt_repository:
    repo: "{{ logstash_oss_repository }}"
    state: "{{ 'present' if logstash_use_oss else 'absent' }}"

- name: Install Logstash
  ansible.builtin.apt:
    name: "{{ logstash_package_name }}"
    state: "{{ logstash_package_state }}"
  notify: Restart logstash

- name: Ensure Logstash data directory exists
  ansible.builtin.file:
    group: "{{ logstash_group }}"
    mode: 0755
    owner: "{{ logstash_user }}"
    path: "{{ logstash_path_data }}"
    state: directory

- name: Ensure Logstash log directory exists
  ansible.builtin.file:
    group: root
    mode: 0755
    owner: "{{ logstash_user }}"
    path: "{{ logstash_path_logs }}"
    state: directory

- name: Ensure Logstash configuration files exist
  ansible.builtin.template:
    dest: "/etc/logstash/{{ item | basename | replace('.j2', '') }}"
    group: root
    mode: 0644
    owner: root
    src: "{{ item }}"
  loop:
    - logstash.yml.j2
    - "{{ logstash_log4j2_template }}"
    - jvm.options.j2
  notify: Restart logstash

- name: Install Logstash pipelines configuration files
  ansible.builtin.template:
    dest: "/etc/logstash/conf.d/"
    group: root
    mode: 0644
    owner: root
    src: "{{ item }}"
  with_fileglob: "{{ logstash_conf_fileglob }}"
  notify: Restart logstash

- name: Ensure Logstash user belongs to its secondary groups
  ansible.builtin.user:
    name: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    groups: "{{ logstash_secondary_groups }}"
  notify: Restart logstash

- name: Ensure Logstash plugins are installed
  logstash_plugin_fixed:
    name: "{{ item.name }}"
    state: present
    version: "{{ item.version | d(omit) }}"
  loop: "{{ logstash_plugins }}"
  loop_control:
    label: "{{ item.name }}"
  notify: Restart logstash

- name: Ensure Logstash is started and starts at boot
  ansible.builtin.service:
    enabled: true
    name: logstash
    state: started
